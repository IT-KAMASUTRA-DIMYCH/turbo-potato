{"ast":null,"code":"var _jsxFileName = \"/home/i/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [selectedUser, setSelectedUser] = useState(null);\n  let [users, setUsers] = useState([]);\n  let [tempSearch, setTempSearch] = useState('it');\n  let [searchTerm, setSearchTerm] = useState('it');\n  useEffect(() => {\n    if (selectedUser) document.title = selectedUser.login;\n  }, [selectedUser]);\n\n  const fetch_data = term => {\n    axios.get(`https://api.github.com/search/users?q=${term}`).then(res => {\n      setUsers(res.data.items);\n    });\n  };\n\n  useEffect(() => {\n    console.log('sync_users');\n    fetch_data(searchTerm);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"search\",\n          value: tempSearch,\n          onChange: ev => setTempSearch(ev.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSearchTerm(tempSearch);\n          },\n          children: \"find\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.login) === u.login ? 'gray' : ''\n          },\n          onClick: () => {\n            setSelectedUser(u);\n          },\n          children: u.login\n        }, u.login, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 27\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vsrX1S4ET2wfkYg3VQRv5ua89bU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/i/my-app/src/App.tsx"],"names":["useState","useEffect","axios","App","selectedUser","setSelectedUser","users","setUsers","tempSearch","setTempSearch","searchTerm","setSearchTerm","document","title","login","fetch_data","term","get","then","res","data","items","console","log","display","ev","currentTarget","value","map","u","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AASA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAwB,IAAxB,CAA9C;AACA,MAAI,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAmB,EAAnB,CAAhC;AACA,MAAI,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAS,IAAT,CAA1C;AACA,MAAI,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAS,IAAT,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGG,YAAH,EACEQ,QAAQ,CAACC,KAAT,GAAiBT,YAAY,CAACU,KAA9B;AACH,GAHQ,EAGN,CAACV,YAAD,CAHM,CAAT;;AAKA,QAAMW,UAAU,GAAIC,IAAD,IAAkB;AACnCd,IAAAA,KAAK,CAACe,GAAN,CAAyB,yCAAwCD,IAAK,EAAtE,EACCE,IADD,CACMC,GAAG,IAAI;AACXZ,MAAAA,QAAQ,CAACY,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAR;AACD,KAHD;AAID,GALD;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAR,IAAAA,UAAU,CAACL,UAAD,CAAV;AACD,GAHQ,EAGN,CAACA,UAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACc,MAAAA,OAAO,EAAC;AAAT,KAAZ;AAAA,4BACE;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,WAAW,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAEhB,UAAnC;AAA+C,UAAA,QAAQ,EAAEiB,EAAE,IAAIhB,aAAa,CAACgB,EAAE,CAACC,aAAH,CAAiBC,KAAlB;AAA5E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAM;AACrBhB,YAAAA,aAAa,CAACH,UAAD,CAAb;AACD,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACGF,KAAK,CAACsB,GAAN,CAAUC,CAAC,iBAAI;AAEd,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAE,CAAA1B,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEU,KAAd,MAAwBe,CAAC,CAACf,KAA3B,GAAoC,MAApC,GAA6C;AAA9D,WAFO;AAGd,UAAA,OAAO,EAAE,MAAM;AACfT,YAAAA,eAAe,CAACwB,CAAD,CAAf;AACD,WALe;AAAA,oBAKZA,CAAC,CAACf;AALU,WACTe,CAAC,CAACf,KADO;AAAA;AAAA;AAAA;AAAA,gBAAf;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA/CQX,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios'\n\ntype SearchUserType = {\n  login: string\n}\ntype SearchResult = {\n  items: SearchUserType[]\n}\n\nfunction App() {\n  let [selectedUser, setSelectedUser] = useState<SearchUserType | null>(null)\n  let [users, setUsers] = useState<SearchUserType[]>([])\n  let [tempSearch, setTempSearch] = useState<string>('it')\n  let [searchTerm, setSearchTerm] = useState<string>('it')\n\n  useEffect(() => {\n    if(selectedUser)\n      document.title = selectedUser.login\n  }, [selectedUser])\n\n  const fetch_data = (term: string) => {\n    axios.get<SearchResult>(`https://api.github.com/search/users?q=${term}`)\n    .then(res => {\n      setUsers(res.data.items)\n    })\n  }\n\n  useEffect(() => {\n    console.log('sync_users')\n    fetch_data(searchTerm)\n  }, [searchTerm])\n\n  return (\n    <div style={{display:'flex'}}>\n      <div>\n        <div>\n          <input placeholder=\"search\" value={tempSearch} onChange={ev => setTempSearch(ev.currentTarget.value)} />\n          <button onClick={() => {\n            setSearchTerm(tempSearch)\n          }}>find</button>\n        </div>\n        <ul>\n          {users.map(u => <li\n            key={u.login}\n            style={{backgroundColor:(selectedUser?.login === u.login) ? 'gray' : ''}}\n            onClick={() => {\n            setSelectedUser(u)\n          }}>{u.login}</li>)}\n        </ul>\n      </div>\n      <div>\n        <h2>username</h2>\n        <div>details</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}