{"ast":null,"code":"var _jsxFileName = \"/home/i/my-app/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Header from './components/header';\nimport Users from './components/users';\nimport User from './components/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  let [tempSearch, setTempSearch] = useState(props.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"search\",\n      value: tempSearch,\n      onChange: ev => setTempSearch(ev.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.onSubmit(tempSearch);\n      },\n      children: \"find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"jJo6vTwso/Z73R3F83eLeYZw65Y=\");\n\n_c = Search;\n\nfunction App() {\n  _s2();\n\n  let [selectedUser, setSelectedUser] = useState(null);\n  let [userDetails, setUserDetails] = useState(null);\n  let [users, setUsers] = useState([]);\n  let [tempSearch, setTempSearch] = useState('it-kamasutra');\n  let [searchTerm, setSearchTerm] = useState('it-kamasutra');\n  useEffect(() => {\n    if (selectedUser) document.title = selectedUser.login;\n  }, [selectedUser]);\n\n  const fetch_data = term => {\n    axios.get(`https://api.github.com/search/users?q=${term}`).then(res => {\n      setUsers(res.data.items);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        value: 'it-kamasutra',\n        onSubmit: value => setSearchTerm(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        tempSearch: tempSearch,\n        searchTerm: searchTerm,\n        setTempSearch: setTempSearch,\n        setSearchTerm: setSearchTerm,\n        fetch_data: fetch_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: users,\n        selectedUser: selectedUser,\n        setSelectedUser: setSelectedUser,\n        setUserDetails: setUserDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(User, {\n        userDetails: userDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"x/qI0kPyKBTLXc6vtNwPBkpZy2o=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/i/my-app/src/App.tsx"],"names":["useState","useEffect","axios","Header","Users","User","Search","props","tempSearch","setTempSearch","value","ev","currentTarget","onSubmit","App","selectedUser","setSelectedUser","userDetails","setUserDetails","users","setUsers","searchTerm","setSearchTerm","document","title","login","fetch_data","term","get","then","res","data","items","display"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Header from './components/header'\nimport Users from './components/users'\nimport User from './components/user'\n\nexport type SearchUserType = {\n  login: string\n}\ntype SearchResult = {\n  items: SearchUserType[]\n}\n\nexport type UserType = {\n  login: string\n  id: number\n  avatar_url: string\n  followers: number\n}\n\ntype SearchPropsType = {\n  value: string, onSubmit: (fixedValue: string) => void\n}\nconst Search = (props: SearchPropsType) => {\n  let [tempSearch, setTempSearch] = useState<string>(props.value)\n\n  return (\n    <div>\n      <input placeholder=\"search\" value={tempSearch} onChange={ev => setTempSearch(ev.currentTarget.value)} />\n      <button onClick={() => {\n        props.onSubmit(tempSearch)\n      }}>find</button>\n    </div>\n  )\n}\n\nfunction App() {\n  let [selectedUser, setSelectedUser] = useState<SearchUserType | null>(null)\n  let [userDetails, setUserDetails] = useState<UserType | null>(null)\n  let [users, setUsers] = useState<SearchUserType[]>([])\n  let [tempSearch, setTempSearch] = useState<string>('it-kamasutra')\n  let [searchTerm, setSearchTerm] = useState<string>('it-kamasutra')\n\n  useEffect(() => {\n    if(selectedUser)\n      document.title = selectedUser.login\n  }, [selectedUser])\n\n  const fetch_data = (term: string) => {\n    axios.get<SearchResult>(`https://api.github.com/search/users?q=${term}`)\n    .then(res => {\n      setUsers(res.data.items)\n    })\n  }\n\n  return (\n    <div style={{display:'flex'}}>\n      <div>\n        <Search value = {'it-kamasutra'} onSubmit = {(value: string) => setSearchTerm(value)} />\n        <Header tempSearch={tempSearch} searchTerm={searchTerm} setTempSearch={setTempSearch} setSearchTerm={setSearchTerm} fetch_data={fetch_data} />\n        <Users users={users} selectedUser={selectedUser} setSelectedUser={setSelectedUser} setUserDetails={setUserDetails} />\n      </div>\n      <div>\n        <User userDetails = {userDetails} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}